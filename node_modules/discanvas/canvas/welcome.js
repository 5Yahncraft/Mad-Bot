const { createCanvas, loadImage } = require('canvas');

/*
By squarfiuz
My Youtube Channel : https://www.youtube.com/channel/UC2ACluqDgpeNbexpdaTACmw
My Instagram : https://www.instagram.com/squarfiuz/
My Discord : https://discord.gg/SgfzZPckVT 
*/

module.exports = class welcome {
    constructor() {
        this.avatar = 'https://cdn.discordapp.com/embed/avatars/0.png'
        this.username = 'username'
        this.discriminator = '#0000'
        this.circleColor = '#fff'
        this.mainText = 'Welcome'
        this.mainTextColor = '#fff'
        this.secondText = null
        this.secondTextColor = '#fff'
        this.pseudoColor = '#fff'
        this.background = null
        this.backgroundColor = null
    }
    setAvatar(value) {
        this.avatar = value;
        return this;
    }
    setUsername(value) {
        this.username = value;
        return this;
    }
    setDiscriminator(value) {
        this.discriminator = value;
        return this;
    }
    setMainText(value) {
        this.mainText = value;
        return this;
    }
    setCircleColor(value) {
        this.circleColor = value;
        return this;
    }
    setMainTextColor(value) {
        this.mainTextColor = value;
        return this;
    }
    setSecondText(value) {
        this.secondText = value;
        return this;
    }
    setSecondTextColor(value) {
        this.secondTextColor = value;
        return this;
    }
    setPseudoColor(value) {
        this.pseudoColor = value;
        return this;
    }
    setBackground(type, value) {
        if(type == 'BACKGROUND'){
            if(!value)throw 'You must give a background URL as a second argument.';
            this.background = value;     
            return this;
        }else if(type == 'COLOR'){
            if(!value)throw 'You must give a hexadecimal color as a second argument.';
            this.backgroundColor = value;
            return this;
        }else{
            throw 'The first argument of .setBackground must be "COLOR" or "BACKGROUND".';
        }
    }

    async toWelcome() {
        const canvas = createCanvas(800, 350);
        const ctx = canvas.getContext('2d');

        if (this.background) {
            ctx.drawImage(await loadImage(this.background), 0, 0, canvas.width, canvas.height);
        }

        if (this.backgroundColor) {
            ctx.beginPath();
            ctx.fillStyle = this.backgroundColor;
            ctx.fillRect(0, 0, canvas.width, canvas.height)
        }

        ctx.font = '68px "Roboto Black"';
        ctx.fillStyle = this.mainTextColor;
        ctx.textAlign = "center";
        ctx.fillText(this.mainText.toUpperCase(), 400, 245);

        ctx.font = '35px "Roboto Black"';
        ctx.fillStyle = this.pseudoColor;
        ctx.textAlign = "center";
        if(this.username.length > 20){
            ctx.fillText(`${this.username.slice(0, 20).toUpperCase() + '...' + '#' + this.discriminator}`, 400, 287.5);
        }else{
            ctx.fillText(this.username.toUpperCase() + '#' + this.discriminator, 400, 287.5);
        }

        ctx.font = '27px "Roboto Black"';
        ctx.fillStyle = this.secondTextColor;
        ctx.textAlign = "center";
        ctx.fillText(this.secondText.toUpperCase(), 400, 325);

        ctx.beginPath();
        ctx.fillStyle = this.circleColor;
        ctx.arc(400, 100, 80, 0, Math.PI * 2);
        ctx.fill();
        ctx.closePath();

        ctx.beginPath();
        ctx.arc(400, 100, 75, 0, Math.PI * 2, true);
        ctx.closePath();
        ctx.clip();

        ctx.drawImage(await loadImage(this.avatar), 325, 25, 150, 150);
        return canvas;
    }
};